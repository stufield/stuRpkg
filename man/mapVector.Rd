% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mapVector.R
\name{mapVector}
\alias{mapVector}
\title{Map Vector}
\usage{
mapVector(v, from.list, to.vec, nomatch = NULL)
}
\arguments{
\item{v}{The source vector to perform the mapping. Must be a character or
factor vector, or be able to be converted to one. In general, the returned
value is of the same class (character/factor) as the input vector.}

\item{from.list}{A list of the associated levels to map in the order they
will be mapped to in \code{to.vec}. Alternatively, a character vector of the
same length as \code{to.vec} of only 1-to-1 mapping is desired.}

\item{to.vec}{The new mapping in the same order as they appear in \code{from.list}.}

\item{nomatch}{Value that unmapped values in the source vector should take.
By default, \code{NULL}, unmapped values are themselves returned unchanged.}

\item{...}{Additional arguments passed to internals of specific S3 methods.}
}
\value{
A factor (or character) vector with the new mapping applied.
}
\description{
Map a factor or character vector (1-to-1 or many-2-one) to another new vector.
}
\details{
If \code{v} is a factor, the returned vector is also a factor (and the levels
of the returned value are determined by the \code{to.vec} argument), otherwise
class of the returned vector is determined by the \code{to.vec} argument. If
the class of the returned vector changes, a warning is flagged.

factor -> factor
character -> factor, numeric, or integer
}
\examples{
# factor
mapVector(test_data$TimePoint,
          list(c("baseline", "24 months"), c("6 months", "12 months")),
          c("one", "two"))

# numeric -> character (with warning)
mapVector(rep(1:4, each = 10), list(c(1, 2), c(3, 4)), c("one", "two"))

# character ("C" is un-mapped)
mapVector(head(LETTERS, 5), list(c("A", "B"), c("D", "E")), c("one", "two"))

# character with missing (nomatch)
mapVector(head(LETTERS, 5), list(c("A", "B"), c("D", "E")), c("one", "two"), nomatch = "No")

# integer
mapVector(1:5, list(c(1, 3, 5), c(2, 4)), c(10, 100))

# character -> integer
mapVector(head(LETTERS, 5), list(c("A", "B"), c("C", "D", "E")), 1:2)

}
\seealso{
\code{\link[base]{setdiff}}, \code{\link[base]{factor}}
}
\author{
Stu Field
}
